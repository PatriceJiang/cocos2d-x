#pragma once
#include "base/ccConfig.h"
#if CC_USE_NAVMESH

#include "cocos/scripting/js-bindings/jswrapper/SeApi.h"

extern se::Object* __jsb_cocos2d_NavMeshAgent_proto;
extern se::Class* __jsb_cocos2d_NavMeshAgent_class;

bool js_register_cocos2d_NavMeshAgent(se::Object* obj);
bool register_all_cocos2dx_navmesh(se::Object* obj);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_setMaxSpeed);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_syncToNode);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_completeOffMeshLink);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_getSeparationWeight);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_setAutoTraverseOffMeshLink);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_getCurrentVelocity);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_syncToAgent);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_isOnOffMeshLink);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_setSeparationWeight);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_pause);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_setAutoOrientation);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_getHeight);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_getMaxSpeed);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_getCurrentOffMeshLinkData);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_getRadius);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_setSyncFlag);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_getSyncFlag);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_resume);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_stop);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_setMaxAcceleration);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_setOrientationRefAxes);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_getMaxAcceleration);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_setHeight);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_getObstacleAvoidanceType);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_getVelocity);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_setRadius);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_setObstacleAvoidanceType);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_getNavMeshAgentComponentName);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_create);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshAgent_NavMeshAgent);

extern se::Object* __jsb_cocos2d_NavMeshObstacle_proto;
extern se::Class* __jsb_cocos2d_NavMeshObstacle_class;

bool js_register_cocos2d_NavMeshObstacle(se::Object* obj);
bool register_all_cocos2dx_navmesh(se::Object* obj);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshObstacle_getSyncFlag);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshObstacle_initWith);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshObstacle_syncToObstacle);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshObstacle_syncToNode);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshObstacle_getHeight);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshObstacle_setSyncFlag);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshObstacle_getRadius);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshObstacle_create);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshObstacle_getNavMeshObstacleComponentName);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMeshObstacle_NavMeshObstacle);

extern se::Object* __jsb_cocos2d_NavMesh_proto;
extern se::Class* __jsb_cocos2d_NavMesh_class;

bool js_register_cocos2d_NavMesh(se::Object* obj);
bool register_all_cocos2dx_navmesh(se::Object* obj);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMesh_removeNavMeshObstacle);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMesh_removeNavMeshAgent);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMesh_update);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMesh_isDebugDrawEnabled);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMesh_addNavMeshAgent);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMesh_addNavMeshObstacle);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMesh_setDebugDrawEnable);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMesh_debugDraw);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMesh_create);
SE_DECLARE_FUNC(js_cocos2dx_navmesh_NavMesh_NavMesh);

#endif //#if CC_USE_NAVMESH
